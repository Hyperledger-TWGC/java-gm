# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
trigger:
  - master
schedules:
- cron: "0 12 * * 0"
  displayName: Weekly Sunday build
  branches:
    include:
    - master
pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: TWGC

jobs:
  - job: gradleWithoutWrapper
    steps:
      - script: gradle build
  - job: ut
    steps:
      - script: gradle wrapper
      - task: Gradle@2
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'build'
  - job: releaseJar
    dependsOn:
      - ut
    steps:
      - script: |
          TAGPATTERN="refs/tags/.*"
          if [[ "$BUILD_SOURCEBRANCH" =~ $TAGPATTERN ]]; then
          	gradle publish -DGITHUB_TOKEN_DAVIDKHALA=$(GITHUB_TOKEN_DAVIDKHALA)
          else
          	echo "skip as not release tag! $BUILD_SOURCEBRANCH"
          fi
